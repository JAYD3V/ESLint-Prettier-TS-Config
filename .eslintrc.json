{
     "$schema": "https://json.schemastore.org/eslintrc",

     //  "ignorePatterns": ["*.js", "*.mjs", "*.cjs", "build/", "node_modules/"],

     "env": {
          "es2021": true,
          "node": true
     },

     // PARSER CONFIGURATION
     "parser": "@typescript-eslint/parser",
     "parserOptions": {
          "ecmaVersion": "latest",
          "sourceType": "module",
          "ecmaFeatures": {
               "modules": true,
               "arrowFunctions": true,
               "classes": true,
               "destructuring": true
          }
     },

     "plugins": ["@typescript-eslint"],
     "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],

     "rules": {
          /*****************************************************

          TYPESCRIPT-PLUGIN RULESET | CUSTOM CONFIGURED RULES */
          "@typescript-eslint/no-explicit-any": 0,
          "@typescript-eslint/no-unused-vars": 0,
          "@typescript-eslint/no-var-requires": 1,
          "@typescript-eslint/type-annotation-spacing": [2, { "before": false, "after": true }],
          /**********************************************

          ESLINT STANDARD RULESET | DISABLED RULES (0) */
          "camelcase": 0,
          "no-console": 0,
          "no-else-return": 0,
          "no-unused-vars": 0,
          "no-unused-expressions": 0,
          "no-control-regex": 0,
          "array-element-newline": 0,
          "no-useless-constructor": 0,
          "no-inline-comments": 0,
          "semi": [2, "always"],
          "comma-style": [2, "last"],
          "comma-dangle": [2, "never"],
          "quotes": [2, "single", { "allowTemplateLiterals": true }],
          "linebreak-style": ["error", "unix"],
          "operator-assignment": [2, "always"],
          "no-useless-return": 2,
          "brace-style": [2, "1tbs", { "allowSingleLine": true }],
          "no-lonely-if": 1,
          "default-param-last": 1,
          "prefer-exponentiation-operator": 1,
          "block-spacing": 1,
          "space-infix-ops": 1,
          "template-curly-spacing": [1, "never"],
          "object-curly-spacing": [1, "always"],
          "array-bracket-spacing": [1, "never"],
          "space-before-function-paren": [1, "never"],
          "space-before-blocks": [1, "never"],
          "space-in-parens": [1, "never"],
          "computed-property-spacing": [1, "never"],
          "func-call-spacing": [1, "never"],
          "space-unary-ops": [1, { "words": true, "nonwords": false }],
          "comma-spacing": [1, { "before": false, "after": true }],
          "max-len": [
               2,
               {
                    "code": 90,
                    "tabWidth": 4,
                    "ignoreTrailingComments": true,
                    "ignoreComments": true,
                    "ignoreUrls": true,
                    "ignoreRegExpLiterals": true,
                    "ignoreStrings": true,
                    "ignoreTemplateLiterals": true
               }
          ],
          "indent": [
               1,
               4,
               {
                    "SwitchCase": 0,
                    "offsetTernaryExpressions": true,
                    "flatTernaryExpressions": false,
                    "FunctionExpression": {
                         "body": 1,
                         "parameters": "first" // Aligns fn params into a column
                    },
                    "FunctionDeclaration": {
                         "body": 1,
                         "parameters": "first" // Aligns fn params into a column
                    },
                    "CallExpression": {
                         "arguments": "first"
                    },
                    "VariableDeclarator": 1,
                    "ObjectExpression": 1,
                    "ImportDeclaration": 1,
                    "ArrayExpression": 1,
                    "MemberExpression": 1
               }
          ],
          "no-multiple-empty-lines": [
               2,
               {
                    "max": 8,
                    "maxBOF": 0,
                    "maxEOF": 1
               }
          ],
          "object-curly-newline": [
               2,
               {
                    // "consistent": true,
                    "ObjectPattern": {
                         "multiline": true
                    }
               }
          ],
          "operator-linebreak": [
               2,
               "before",
               {
                    "overrides": {
                         "||": "before",
                         "|": "before",
                         "&&": "before",
                         "&": "after",
                         ">=": "after",
                         "<=": "after",
                         "==": "after",
                         "===": "after"
                    }
               }
          ]
     }
}
